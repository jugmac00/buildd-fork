#!/bin/sh
#
# Copyright 2009 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).
#
# Authors: Daniel Silverstone <daniel.silverstone@canonical.com>
#      and Adam Conrad <adam.conrad@canonical.com>

# Buildd Slave tool to update a debian chroot

# Expects build id as arg 1, makes build-id to contain the build
# Expects rest of arguments to be to pass to sbuild

# Needs SBUILD to be set to a sbuild instance with passwordless sudo ability

exec 2>&1

export LANG=C LC_ALL=C 

SBUILD=/usr/bin/sbuild
BUILDID=$1
ARCHITECTURETAG=$2
SUITE=$3

shift 3

export NR_PROCESSORS=$(grep ^processor /proc/cpuinfo | wc -l)

echo "Initiating build $BUILDID with $NR_PROCESSORS processor cores."

if [ $NR_PROCESSORS -lt 2 ]; then
        unset NR_PROCESSORS
fi

cd "$HOME/build-$BUILDID"

hostarch=$(dpkg --print-architecture)

WARN=""
case $hostarch in
  hppa|powerpc|sparc)
    SBUILD="linux32 $SBUILD"
    WARN="--warnonly"
    ;;
  i386|lpia|armel)
    # SBUILD is already correct
    WARN="--warnonly"
    ;;
  amd64)
    if [ "$hostarch" != "$ARCHITECTURETAG" ]; then
      SBUILD="linux32 $SBUILD"
      WARN="--warnonly"
    fi
    ;;
  ia64)
    ;;
esac

case $SUITE in
    warty*|hoary*|breezy*|dapper*|edgy*|feisty*|gutsy*|hardy*|karmic*)
        WARN="--warnonly"
        ;;
esac

$SBUILD "$@" | /usr/bin/check-implicit-pointer-functions --inline $WARN
RET=$?

# really successful returns
[ $RET = 0 ] || exit $RET

STATE=$(cat build-progress | awk '{print $2}')
STEP=$(cat build-progress | awk '{print $3}')

# If the build was successful; return 0
[ "$STATE" = "successful" ] && exit 0

# If we think it's a dep-wait problem, exit 1
[ "$STEP" = "install-deps" ] && exit 1

# Is this a state where auto-give-back should kick in; exit 2
[ "$STEP" = "find-dsc" ] && exit 2
[ "$STEP" = "fetch-src" ] && exit 2
[ "$STEP" = "unpack-check" ] && exit 2
[ "$STEP" = "check-space" ] && exit 2
[ "$STEP" = "install-deps-env" ] && exit 2

# Any other reason (which we'll treat as a build failure), exit 3
exit 3

# There is an exit code of "4" that means the builder itself
# is having problems.  Currently, we don't use it at all.
# exit 4
