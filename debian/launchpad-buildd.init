#!/bin/sh
#
# Copyright 2009,2011 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).
#
# launchpad-buildd
#               This file is used to start and stop launchpad buildds

### BEGIN INIT INFO
# Provides:          launchpad_buildd
# Required-Start:    $local_fs $network $syslog $time $remote_fs
# Required-Stop:     $local_fs $network $syslog $time $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Start/stop launchpad buildds
### END INIT INFO

set -e

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="launchpad build slaves"

TACFILE="/usr/lib/launchpad-buildd/buildd-slave.tac"

PIDROOT="/var/run/launchpad-buildd"
LOGROOT="/var/log/launchpad-buildd"
CONFROOT="/etc/launchpad-buildd"

# Gracefully exit if the package has been removed.
test -e $TACFILE || exit 0


d_check_enabled() {
RUN_NETWORK_REQUESTS_AS_ROOT=no   # Good idea generally

[ -f /etc/default/launchpad-buildd ] && . /etc/default/launchpad-buildd

hostname="`hostname -f`"
case "$hostname" in
*.ppa|*.buildd)
	cat <<END

launchpad-buildd: starting automatically because $hostname seems to be a buildd machine.

CAUTION: this service accepts network commands and runs them as root.
END
	return
	;;
*)
	echo "launchpad-buildd: not starting automatically on $hostname"
	;;
esac

if [ "$RUN_NETWORK_REQUESTS_AS_ROOT" != yes ]
then
	cat <<END

launchpad-buildd is disabled.
When enabled, launchpad-buildd accepts network commands and runs them as root.
If you are sure this server will only be reachable by trusted machines, edit
/etc/default/launchpad-buildd.

END
	exit 0
fi
}


#
#       Function that starts a buildd slave
#
d_start() {
    CONF=$1
    PIDFILE="$PIDROOT"/"$CONF".pid
    LOGFILE="$LOGROOT"/"$CONF".log
    # prior to karmic, twisted didn't support --umask, and defaulted it well.
    # we need it to be 022, not 077.
    case $(lsb_release -sc) in
	[a-j]*)	UMASK="";;
	[k-z]*)	UMASK="--umask 022";;
    esac
    su - buildd -c "BUILDD_SLAVE_CONFIG=$CONFROOT/$CONF PYTHONPATH=/usr/lib/launchpad-buildd twistd --no_save --pidfile $PIDFILE --python $TACFILE --logfile $LOGFILE $UMASK"
}

#
#       Function that stops a buildd slave
#
d_stop() {
    CONF=$1
    PIDFILE="$PIDROOT"/"$CONF".pid
    test -r $PIDFILE && kill -TERM $(cat $PIDFILE) || true
}

CONFS=$(cd $CONFROOT; ls|grep -v "^-"|grep -v "~$")

case "$1" in
  start)
	d_check_enabled

        echo -n "Starting $DESC:"
        install -m 755 -o buildd -g buildd -d $PIDROOT

	# Create any missing directories and chown them appropriately
	install -d -o buildd -g buildd /home/buildd/filecache-default

	for conf in $CONFS; do
	    echo -n " $conf"
	    d_start $conf
	done
        echo "."
        ;;
  stop)
        echo -n "Stopping $DESC:"
	for conf in $CONFS; do
	    echo -n " $conf"
	    d_stop $conf
	done
        echo "."
        ;;
  restart|force-reload)
        #
        #       If the "reload" option is implemented, move the "force-reload"
        #       option to the "reload" entry above. If not, "force-reload" is
        #       just the same as "restart".
        #
	$0 stop
	sleep 1
	$0 start
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
