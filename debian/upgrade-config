#!/usr/bin/python
#
# Copyright 2009, 2010 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

"""Upgrade a launchpad-buildd configuration file."""

import sys
import os
import subprocess

(old_version, conf_file) = sys.argv[1:]

def upgrade_to_12():
    print "Upgrading %s to version 12" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev12~"])
    in_file = open(conf_file+"-prev12~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[debianmanager]"):
            line += "ogrepath = /usr/share/launchpad-buildd/slavebin/apply-ogre-model\n"
        if line.startswith("sbuildargs"):
            line = line.replace("-A", "")
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_34():
    print "Upgrading %s to version 34" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev34~"])
    in_file = open(conf_file+"-prev34~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[debianmanager]"):
            line += "sourcespath = /usr/share/launchpad-buildd/slavebin/override-sources-list\n"
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_39():
    print "Upgrading %s to version 39" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev39~"])
    in_file = open(conf_file+"-prev39~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("sbuildargs"):
            line = line.replace("-dautobuild ","")
        if line.startswith("[slave]"):
            line += "ntphost = ntp.buildd\n"
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_57():
    print "Upgrading %s to version 57" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev57~"])
    in_file = open(conf_file+"-prev57~", "r")
    out_file = open(conf_file, "w")
    # We want to move all the sbuild lines to a new
    # 'binarypackagemanager' section at the end.
    binarypackage_lines = []
    for line in in_file:
        if line.startswith("sbuild"):
            binarypackage_lines.append(line)
        else:
            out_file.write(line)
    out_file.write('[binarypackagemanager]\n')
    for line in binarypackage_lines:
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_58():
    print "Upgrading %s to version 58" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev58~"])
    in_file = open(conf_file+"-prev58~", "r")
    out_file = open(conf_file, "w")
    out_file.write(in_file.read())
    out_file.write(
        '\n[sourcepackagerecipemanager]\n'
        'buildrecipepath = /usr/share/launchpad-buildd'
        '/slavebin/buildrecipe\n')

def upgrade_to_59():
    print "Upgrading %s to version 59" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev59~"])
    in_file = open(conf_file+"-prev59~", "r")
    out_file = open(conf_file, "w")
    out_file.write(in_file.read())
    out_file.write(
        '\n[translationtemplatesmanager]\n'
        'generatepath = /usr/share/launchpad-buildd/slavebin/generate-translation-templates\n'
        'resultarchive = translation-templates.tar.gz\n')

def upgrade_to_63():
    print "Upgrading %s to version 63" % conf_file
    subprocess.call(["mv", conf_file, conf_file+"-prev63~"])
    in_file = open(conf_file+"-prev63~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if not line.startswith('ogrepath'):
            out_file.write(line)


if __name__ == "__main__":
    if old_version.find("~") > 0:
	old_version = old_version[:old_version.find("~")]
    if int(old_version) < 12:
        upgrade_to_12()
    if int(old_version) < 34:
        upgrade_to_34()
    if int(old_version) < 39:
        upgrade_to_39()
    if int(old_version) < 57:
        upgrade_to_57()
    if int(old_version) < 58:
        upgrade_to_58()
    if int(old_version) < 59:
        upgrade_to_59()
    if int(old_version) < 63:
        upgrade_to_63()

