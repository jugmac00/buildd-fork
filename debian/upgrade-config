#!/usr/bin/python3
#
# Copyright 2009-2020 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

"""Upgrade a launchpad-buildd configuration file."""

from __future__ import print_function

import os
import re
import sys
import subprocess

import apt_pkg


apt_pkg.init()

(old_version, conf_file) = sys.argv[1:]

def upgrade_to_12():
    print("Upgrading %s to version 12" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev12~"])
    in_file = open(conf_file+"-prev12~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[debianmanager]"):
            line += "ogrepath = /usr/share/launchpad-buildd/slavebin/apply-ogre-model\n"
        if line.startswith("sbuildargs"):
            line = line.replace("-A", "")
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_34():
    print("Upgrading %s to version 34" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev34~"])
    in_file = open(conf_file+"-prev34~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[debianmanager]"):
            line += "sourcespath = /usr/share/launchpad-buildd/slavebin/override-sources-list\n"
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_39():
    print("Upgrading %s to version 39" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev39~"])
    in_file = open(conf_file+"-prev39~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("sbuildargs"):
            line = line.replace("-dautobuild ","")
        if line.startswith("[slave]"):
            line += "ntphost = ntp.buildd\n"
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_57():
    print("Upgrading %s to version 57" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev57~"])
    in_file = open(conf_file+"-prev57~", "r")
    out_file = open(conf_file, "w")
    # We want to move all the sbuild lines to a new
    # 'binarypackagemanager' section at the end.
    binarypackage_lines = []
    for line in in_file:
        if line.startswith("sbuild"):
            binarypackage_lines.append(line)
        else:
            out_file.write(line)
    out_file.write('[binarypackagemanager]\n')
    for line in binarypackage_lines:
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_58():
    print("Upgrading %s to version 58" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev58~"])
    in_file = open(conf_file+"-prev58~", "r")
    out_file = open(conf_file, "w")
    out_file.write(in_file.read())
    out_file.write(
        '\n[sourcepackagerecipemanager]\n'
        'buildrecipepath = /usr/share/launchpad-buildd'
        '/slavebin/buildrecipe\n')

def upgrade_to_59():
    print("Upgrading %s to version 59" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev59~"])
    in_file = open(conf_file+"-prev59~", "r")
    out_file = open(conf_file, "w")
    out_file.write(in_file.read())
    out_file.write(
        '\n[translationtemplatesmanager]\n'
        'generatepath = /usr/share/launchpad-buildd/slavebin/generate-translation-templates\n'
        'resultarchive = translation-templates.tar.gz\n')

def upgrade_to_63():
    print("Upgrading %s to version 63" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev63~"])
    in_file = open(conf_file+"-prev63~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if not line.startswith('ogrepath'):
            out_file.write(line)

def upgrade_to_110():
    print("Upgrading %s to version 110" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev110~"])
    in_file = open(conf_file+"-prev110~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[allmanagers]"):
            line += "preppath = /usr/share/launchpad-buildd/slavebin/slave-prep\n"
        out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_115():
    print("Upgrading %s to version 115" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev115~"])
    in_allmanagers = False
    in_file = open(conf_file+"-prev115~", "r")
    out_file = open(conf_file, "w")
    for line in in_file:
        if line.startswith("[allmanagers]"):
            in_allmanagers = True
        elif in_allmanagers and (line.startswith("[") or not line.strip()):
            out_file.write("processscanpath = /usr/share/launchpad-buildd/slavebin/scan-for-processes\n")
            in_allmanagers = False
        if not line.startswith("processscanpath = "):
            out_file.write(line)
    in_file.close()
    out_file.close()

def upgrade_to_120():
    print("Upgrading %s to version 120" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev120~"])
    in_file = open(conf_file+"-prev120~", "r")
    out_file = open(conf_file, "w")
    out_file.write(in_file.read())
    out_file.write(
        "\n[livefilesystemmanager]\n"
        "buildlivefspath = /usr/share/launchpad-buildd/slavebin/buildlivefs\n")
    in_file.close()
    out_file.close()

def upgrade_to_126():
    print("Upgrading %s to version 126" % conf_file)
    subprocess.call(["mv", conf_file, conf_file+"-prev126~"])
    in_file = open(conf_file+"-prev126~", "r")
    out_file = open(conf_file, "w")
    archive_ubuntu = " --archive=ubuntu"
    for line in in_file:
        line = line.rstrip("\n")
        if line.endswith(archive_ubuntu):
            line = line[:-len(archive_ubuntu)]
        out_file.write(line + "\n")
    in_file.close()
    out_file.close()

def upgrade_to_127():
    print("Upgrading %s to version 127" % conf_file)
    os.rename(conf_file, conf_file + "-prev127~")

    in_file = open(conf_file + "-prev127~", "r")
    out_file = open(conf_file, "w")
    obsolete_prefixes = [
        '[allmanagers]', '[debianmanager]', '[binarypackagemanager]',
        '[sourcepackagerecipemanager]', '[livefilesystemmanager]',
        'preppath ', 'unpackpath ', 'cleanpath ', 'mountpath ', 'umountpath ',
        'processscanpath ', 'updatepath ', 'sourcespath ', 'sbuildpath ',
        'sbuildargs ', 'buildrecipepath ', 'generatepath ',
        'buildlivefspath ',
        ]
    wrote_blank = False
    for line in in_file:
        # Remove obsolete paths and sections.
        if any(line.startswith(p) for p in obsolete_prefixes):
            continue
        # Squash any sequences of blank lines into a single one.
        if not line.strip():
            if wrote_blank:
                continue
            wrote_blank = True
        else:
            wrote_blank = False
        out_file.write(line)
        # Add single new sharepath to the end of the slave section.
        if line.startswith("ntphost "):
            out_file.write("sharepath = /usr/share/launchpad-buildd\n")
    in_file.close()
    out_file.close()

def upgrade_to_162():
    print("Upgrading %s to version 162" % conf_file)
    os.rename(conf_file, conf_file + "-prev162~")

    with open(conf_file + "-prev162~", "r") as in_file:
        with open(conf_file, "w") as out_file:
            out_file.write(in_file.read())
            out_file.write(
                "\n[snapmanager]\n"
                "proxyport = 8222\n")

def upgrade_to_190():
    print("Upgrading %s to version 190" % conf_file)
    os.rename(conf_file, conf_file + "-prev190~")

    with open(conf_file + "-prev190~", "r") as in_file:
        with open(conf_file, "w") as out_file:
            for line in in_file:
                if line.strip() == "[slave]":
                    line = "[builder]\n"
                out_file.write(line)

if __name__ == "__main__":
    old_version = re.sub(r'[~-].*', '', old_version)
    if apt_pkg.version_compare(old_version, "12") < 0:
        upgrade_to_12()
    if apt_pkg.version_compare(old_version, "34") < 0:
        upgrade_to_34()
    if apt_pkg.version_compare(old_version, "39") < 0:
        upgrade_to_39()
    if apt_pkg.version_compare(old_version, "57") < 0:
        upgrade_to_57()
    if apt_pkg.version_compare(old_version, "58") < 0:
        upgrade_to_58()
    if apt_pkg.version_compare(old_version, "59") < 0:
        upgrade_to_59()
    if apt_pkg.version_compare(old_version, "63") < 0:
        upgrade_to_63()
    if apt_pkg.version_compare(old_version, "110") < 0:
        upgrade_to_110()
    if apt_pkg.version_compare(old_version, "115") < 0:
        upgrade_to_115()
    if apt_pkg.version_compare(old_version, "120") < 0:
        upgrade_to_120()
    if apt_pkg.version_compare(old_version, "126") < 0:
        upgrade_to_126()
    if apt_pkg.version_compare(old_version, "127") < 0:
        upgrade_to_127()
    if apt_pkg.version_compare(old_version, "162") < 0:
        upgrade_to_162()
    if apt_pkg.version_compare(old_version, "190") < 0:
        upgrade_to_190()
